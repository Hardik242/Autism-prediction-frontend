import {AlertTriangle, Loader2} from "lucide-react";
import {Alert, AlertDescription} from "./ui/alert";
import {ResultCard} from "./ResultCard";

interface Result {
    model_name: string;
    risk_percent: number;
    explanation: string[];
}

interface ResultsSectionProps {
    isLoading: boolean;
    results: Result[] | null;
}

export const ResultsSection = ({isLoading, results}: ResultsSectionProps) => {
    if (!isLoading && !results) return null;

    return (
        <section className="space-y-6 animate-fade-in">
            <h2 className="text-2xl font-semibold text-foreground">
                Screening Results
            </h2>

            {isLoading ? (
                <div className="flex flex-col items-center justify-center py-16 space-y-4">
                    <Loader2 className="h-12 w-12 text-primary animate-spin" />
                    <p className="text-lg text-muted-foreground">
                        Analyzing... Please wait.
                    </p>
                    <div className="flex gap-2">
                        <div className="w-2 h-2 rounded-full bg-primary animate-pulse-soft" />
                        <div
                            className="w-2 h-2 rounded-full bg-primary animate-pulse-soft"
                            style={{animationDelay: "0.2s"}}
                        />
                        <div
                            className="w-2 h-2 rounded-full bg-primary animate-pulse-soft"
                            style={{animationDelay: "0.4s"}}
                        />
                    </div>
                </div>
            ) : results ? (
                <>
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                        {results.map((result, index) => (
                            <ResultCard
                                key={index}
                                modelName={result.model_name}
                                riskPercent={result.risk_percent}
                                explanation={result.explanation}
                            />
                        ))}
                    </div>

                    <Alert className="border-warning/50 bg-warning/5">
                        <AlertTriangle className="h-5 w-5 text-warning" />
                        <AlertDescription className="text-foreground">
                            <strong>Medical Disclaimer:</strong> These results
                            are generated by AI models for screening purposes
                            only. They are not a substitute for a comprehensive
                            evaluation by a qualified healthcare professional.
                            If you have concerns about ASD, please consult with
                            a licensed medical provider, psychologist, or
                            developmental specialist for a thorough assessment
                            and proper diagnosis.
                        </AlertDescription>
                    </Alert>
                </>
            ) : null}
        </section>
    );
};
